// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v4.24.3
// source: proxy.proto

package pb

import (
	"reflect"
	"sync"

	"google.golang.org/protobuf/reflect/protoreflect"
	"google.golang.org/protobuf/runtime/protoimpl"
	"google.golang.org/protobuf/types/known/emptypb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CapabilityType int32

const (
	CapabilityType_Unknown   CapabilityType = 0
	CapabilityType_Trigger   CapabilityType = 1
	CapabilityType_Action    CapabilityType = 2
	CapabilityType_Consensus CapabilityType = 3
	CapabilityType_Target    CapabilityType = 4
)

// Enum value maps for CapabilityType.
var (
	CapabilityType_name = map[int32]string{
		0: "Unknown",
		1: "Trigger",
		2: "Action",
		3: "Consensus",
		4: "Target",
	}
	CapabilityType_value = map[string]int32{
		"Unknown":   0,
		"Trigger":   1,
		"Action":    2,
		"Consensus": 3,
		"Target":    4,
	}
)

func (x CapabilityType) Enum() *CapabilityType {
	p := new(CapabilityType)
	*p = x
	return p
}

func (x CapabilityType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CapabilityType) Descriptor() protoreflect.EnumDescriptor {
	return file_proxy_proto_enumTypes[0].Descriptor()
}

func (CapabilityType) Type() protoreflect.EnumType {
	return &file_proxy_proto_enumTypes[0]
}

func (x CapabilityType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CapabilityType.Descriptor instead.
func (CapabilityType) EnumDescriptor() ([]byte, []int) {
	return file_proxy_proto_rawDescGZIP(), []int{0}
}

type TriggerEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TriggerType string `protobuf:"bytes,1,opt,name=TriggerType,proto3" json:"TriggerType,omitempty"`
	ID          string `protobuf:"bytes,2,opt,name=ID,proto3" json:"ID,omitempty"`
	Outputs     []byte `protobuf:"bytes,3,opt,name=Outputs,proto3" json:"Outputs,omitempty"`
}

func (x *TriggerEvent) Reset() {
	*x = TriggerEvent{}
	mi := &file_proxy_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriggerEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerEvent) ProtoMessage() {}

func (x *TriggerEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerEvent.ProtoReflect.Descriptor instead.
func (*TriggerEvent) Descriptor() ([]byte, []int) {
	return file_proxy_proto_rawDescGZIP(), []int{0}
}

func (x *TriggerEvent) GetTriggerType() string {
	if x != nil {
		return x.TriggerType
	}
	return ""
}

func (x *TriggerEvent) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *TriggerEvent) GetOutputs() []byte {
	if x != nil {
		return x.Outputs
	}
	return nil
}

type TriggerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TriggerEvent *TriggerEvent `protobuf:"bytes,1,opt,name=TriggerEvent,proto3" json:"TriggerEvent,omitempty"`
	Error        string        `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *TriggerResponse) Reset() {
	*x = TriggerResponse{}
	mi := &file_proxy_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriggerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerResponse) ProtoMessage() {}

func (x *TriggerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerResponse.ProtoReflect.Descriptor instead.
func (*TriggerResponse) Descriptor() ([]byte, []int) {
	return file_proxy_proto_rawDescGZIP(), []int{1}
}

func (x *TriggerResponse) GetTriggerEvent() *TriggerEvent {
	if x != nil {
		return x.TriggerEvent
	}
	return nil
}

func (x *TriggerResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type TriggerRegistrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TriggerID string    `protobuf:"bytes,1,opt,name=TriggerID,proto3" json:"TriggerID,omitempty"`
	Metadata  *Metadata `protobuf:"bytes,2,opt,name=Metadata,proto3" json:"Metadata,omitempty"`
	Config    []byte    `protobuf:"bytes,3,opt,name=Config,proto3" json:"Config,omitempty"`
}

func (x *TriggerRegistrationRequest) Reset() {
	*x = TriggerRegistrationRequest{}
	mi := &file_proxy_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriggerRegistrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerRegistrationRequest) ProtoMessage() {}

func (x *TriggerRegistrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerRegistrationRequest.ProtoReflect.Descriptor instead.
func (*TriggerRegistrationRequest) Descriptor() ([]byte, []int) {
	return file_proxy_proto_rawDescGZIP(), []int{2}
}

func (x *TriggerRegistrationRequest) GetTriggerID() string {
	if x != nil {
		return x.TriggerID
	}
	return ""
}

func (x *TriggerRegistrationRequest) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *TriggerRegistrationRequest) GetConfig() []byte {
	if x != nil {
		return x.Config
	}
	return nil
}

type Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkflowID               string `protobuf:"bytes,1,opt,name=WorkflowID,proto3" json:"WorkflowID,omitempty"`
	WorkflowOwner            string `protobuf:"bytes,2,opt,name=WorkflowOwner,proto3" json:"WorkflowOwner,omitempty"`
	WorkflowExecutionID      string `protobuf:"bytes,3,opt,name=WorkflowExecutionID,proto3" json:"WorkflowExecutionID,omitempty"`
	WorkflowName             string `protobuf:"bytes,4,opt,name=WorkflowName,proto3" json:"WorkflowName,omitempty"`
	WorkflowDonID            uint32 `protobuf:"varint,5,opt,name=WorkflowDonID,proto3" json:"WorkflowDonID,omitempty"`
	WorkflowDonConfigVersion uint32 `protobuf:"varint,6,opt,name=WorkflowDonConfigVersion,proto3" json:"WorkflowDonConfigVersion,omitempty"`
	ReferenceID              string `protobuf:"bytes,7,opt,name=ReferenceID,proto3" json:"ReferenceID,omitempty"`
	DecodedWorkflowName      string `protobuf:"bytes,8,opt,name=DecodedWorkflowName,proto3" json:"DecodedWorkflowName,omitempty"`
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	mi := &file_proxy_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_proxy_proto_rawDescGZIP(), []int{3}
}

func (x *Metadata) GetWorkflowID() string {
	if x != nil {
		return x.WorkflowID
	}
	return ""
}

func (x *Metadata) GetWorkflowOwner() string {
	if x != nil {
		return x.WorkflowOwner
	}
	return ""
}

func (x *Metadata) GetWorkflowExecutionID() string {
	if x != nil {
		return x.WorkflowExecutionID
	}
	return ""
}

func (x *Metadata) GetWorkflowName() string {
	if x != nil {
		return x.WorkflowName
	}
	return ""
}

func (x *Metadata) GetWorkflowDonID() uint32 {
	if x != nil {
		return x.WorkflowDonID
	}
	return 0
}

func (x *Metadata) GetWorkflowDonConfigVersion() uint32 {
	if x != nil {
		return x.WorkflowDonConfigVersion
	}
	return 0
}

func (x *Metadata) GetReferenceID() string {
	if x != nil {
		return x.ReferenceID
	}
	return ""
}

func (x *Metadata) GetDecodedWorkflowName() string {
	if x != nil {
		return x.DecodedWorkflowName
	}
	return ""
}

type ListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListRequest) Reset() {
	*x = ListRequest{}
	mi := &file_proxy_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRequest) ProtoMessage() {}

func (x *ListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRequest.ProtoReflect.Descriptor instead.
func (*ListRequest) Descriptor() ([]byte, []int) {
	return file_proxy_proto_rawDescGZIP(), []int{4}
}

type ListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CapInfos []*CapabilityInfo `protobuf:"bytes,1,rep,name=capInfos,proto3" json:"capInfos,omitempty"`
}

func (x *ListResponse) Reset() {
	*x = ListResponse{}
	mi := &file_proxy_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResponse) ProtoMessage() {}

func (x *ListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResponse.ProtoReflect.Descriptor instead.
func (*ListResponse) Descriptor() ([]byte, []int) {
	return file_proxy_proto_rawDescGZIP(), []int{5}
}

func (x *ListResponse) GetCapInfos() []*CapabilityInfo {
	if x != nil {
		return x.CapInfos
	}
	return nil
}

type DON struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DON) Reset() {
	*x = DON{}
	mi := &file_proxy_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DON) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DON) ProtoMessage() {}

func (x *DON) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DON.ProtoReflect.Descriptor instead.
func (*DON) Descriptor() ([]byte, []int) {
	return file_proxy_proto_rawDescGZIP(), []int{6}
}

type CapabilityInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID             string         `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	CapabilityType CapabilityType `protobuf:"varint,2,opt,name=CapabilityType,proto3,enum=mockcap.CapabilityType" json:"CapabilityType,omitempty"`
	Description    string         `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	DON            *DON           `protobuf:"bytes,4,opt,name=DON,proto3" json:"DON,omitempty"`
	IsLocal        bool           `protobuf:"varint,5,opt,name=IsLocal,proto3" json:"IsLocal,omitempty"`
}

func (x *CapabilityInfo) Reset() {
	*x = CapabilityInfo{}
	mi := &file_proxy_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CapabilityInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapabilityInfo) ProtoMessage() {}

func (x *CapabilityInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapabilityInfo.ProtoReflect.Descriptor instead.
func (*CapabilityInfo) Descriptor() ([]byte, []int) {
	return file_proxy_proto_rawDescGZIP(), []int{7}
}

func (x *CapabilityInfo) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *CapabilityInfo) GetCapabilityType() CapabilityType {
	if x != nil {
		return x.CapabilityType
	}
	return CapabilityType_Unknown
}

func (x *CapabilityInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CapabilityInfo) GetDON() *DON {
	if x != nil {
		return x.DON
	}
	return nil
}

func (x *CapabilityInfo) GetIsLocal() bool {
	if x != nil {
		return x.IsLocal
	}
	return false
}

type SendTriggerEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID      string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	EventID string `protobuf:"bytes,2,opt,name=EventID,proto3" json:"EventID,omitempty"`
	Payload []byte `protobuf:"bytes,3,opt,name=Payload,proto3" json:"Payload,omitempty"`
}

func (x *SendTriggerEventRequest) Reset() {
	*x = SendTriggerEventRequest{}
	mi := &file_proxy_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendTriggerEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTriggerEventRequest) ProtoMessage() {}

func (x *SendTriggerEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTriggerEventRequest.ProtoReflect.Descriptor instead.
func (*SendTriggerEventRequest) Descriptor() ([]byte, []int) {
	return file_proxy_proto_rawDescGZIP(), []int{8}
}

func (x *SendTriggerEventRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *SendTriggerEventRequest) GetEventID() string {
	if x != nil {
		return x.EventID
	}
	return ""
}

func (x *SendTriggerEventRequest) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type RegisterToWorkflowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                   string                `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	CapabilityType       CapabilityType        `protobuf:"varint,2,opt,name=CapabilityType,proto3,enum=mockcap.CapabilityType" json:"CapabilityType,omitempty"`
	RegistrationMetadata *RegistrationMetadata `protobuf:"bytes,3,opt,name=RegistrationMetadata,proto3" json:"RegistrationMetadata,omitempty"`
	Config               []byte                `protobuf:"bytes,4,opt,name=Config,proto3" json:"Config,omitempty"`
}

func (x *RegisterToWorkflowRequest) Reset() {
	*x = RegisterToWorkflowRequest{}
	mi := &file_proxy_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterToWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterToWorkflowRequest) ProtoMessage() {}

func (x *RegisterToWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterToWorkflowRequest.ProtoReflect.Descriptor instead.
func (*RegisterToWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_proxy_proto_rawDescGZIP(), []int{9}
}

func (x *RegisterToWorkflowRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *RegisterToWorkflowRequest) GetCapabilityType() CapabilityType {
	if x != nil {
		return x.CapabilityType
	}
	return CapabilityType_Unknown
}

func (x *RegisterToWorkflowRequest) GetRegistrationMetadata() *RegistrationMetadata {
	if x != nil {
		return x.RegistrationMetadata
	}
	return nil
}

func (x *RegisterToWorkflowRequest) GetConfig() []byte {
	if x != nil {
		return x.Config
	}
	return nil
}

type RegistrationMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkflowID    string `protobuf:"bytes,1,opt,name=WorkflowID,proto3" json:"WorkflowID,omitempty"`
	WorkflowOwner string `protobuf:"bytes,2,opt,name=WorkflowOwner,proto3" json:"WorkflowOwner,omitempty"`
	ReferenceID   string `protobuf:"bytes,3,opt,name=ReferenceID,proto3" json:"ReferenceID,omitempty"`
}

func (x *RegistrationMetadata) Reset() {
	*x = RegistrationMetadata{}
	mi := &file_proxy_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegistrationMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationMetadata) ProtoMessage() {}

func (x *RegistrationMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrationMetadata.ProtoReflect.Descriptor instead.
func (*RegistrationMetadata) Descriptor() ([]byte, []int) {
	return file_proxy_proto_rawDescGZIP(), []int{10}
}

func (x *RegistrationMetadata) GetWorkflowID() string {
	if x != nil {
		return x.WorkflowID
	}
	return ""
}

func (x *RegistrationMetadata) GetWorkflowOwner() string {
	if x != nil {
		return x.WorkflowOwner
	}
	return ""
}

func (x *RegistrationMetadata) GetReferenceID() string {
	if x != nil {
		return x.ReferenceID
	}
	return ""
}

type UnregisterFromWorkflowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegistrationMetadata *RegistrationMetadata `protobuf:"bytes,1,opt,name=RegistrationMetadata,proto3" json:"RegistrationMetadata,omitempty"`
	Config               []byte                `protobuf:"bytes,2,opt,name=Config,proto3" json:"Config,omitempty"`
}

func (x *UnregisterFromWorkflowRequest) Reset() {
	*x = UnregisterFromWorkflowRequest{}
	mi := &file_proxy_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnregisterFromWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterFromWorkflowRequest) ProtoMessage() {}

func (x *UnregisterFromWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterFromWorkflowRequest.ProtoReflect.Descriptor instead.
func (*UnregisterFromWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_proxy_proto_rawDescGZIP(), []int{11}
}

func (x *UnregisterFromWorkflowRequest) GetRegistrationMetadata() *RegistrationMetadata {
	if x != nil {
		return x.RegistrationMetadata
	}
	return nil
}

func (x *UnregisterFromWorkflowRequest) GetConfig() []byte {
	if x != nil {
		return x.Config
	}
	return nil
}

type ExecutableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID              string         `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	CapabilityType  CapabilityType `protobuf:"varint,2,opt,name=CapabilityType,proto3,enum=mockcap.CapabilityType" json:"CapabilityType,omitempty"`
	RequestMetadata *Metadata      `protobuf:"bytes,3,opt,name=RequestMetadata,proto3" json:"RequestMetadata,omitempty"`
	Config          []byte         `protobuf:"bytes,4,opt,name=Config,proto3" json:"Config,omitempty"`
	Inputs          []byte         `protobuf:"bytes,5,opt,name=Inputs,proto3" json:"Inputs,omitempty"`
}

func (x *ExecutableRequest) Reset() {
	*x = ExecutableRequest{}
	mi := &file_proxy_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecutableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutableRequest) ProtoMessage() {}

func (x *ExecutableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutableRequest.ProtoReflect.Descriptor instead.
func (*ExecutableRequest) Descriptor() ([]byte, []int) {
	return file_proxy_proto_rawDescGZIP(), []int{12}
}

func (x *ExecutableRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *ExecutableRequest) GetCapabilityType() CapabilityType {
	if x != nil {
		return x.CapabilityType
	}
	return CapabilityType_Unknown
}

func (x *ExecutableRequest) GetRequestMetadata() *Metadata {
	if x != nil {
		return x.RequestMetadata
	}
	return nil
}

func (x *ExecutableRequest) GetConfig() []byte {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ExecutableRequest) GetInputs() []byte {
	if x != nil {
		return x.Inputs
	}
	return nil
}

type CapabilityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *CapabilityResponse) Reset() {
	*x = CapabilityResponse{}
	mi := &file_proxy_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CapabilityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapabilityResponse) ProtoMessage() {}

func (x *CapabilityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapabilityResponse.ProtoReflect.Descriptor instead.
func (*CapabilityResponse) Descriptor() ([]byte, []int) {
	return file_proxy_proto_rawDescGZIP(), []int{13}
}

func (x *CapabilityResponse) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type ExecutableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID             string         `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	CapabilityType CapabilityType `protobuf:"varint,2,opt,name=CapabilityType,proto3,enum=mockcap.CapabilityType" json:"CapabilityType,omitempty"`
	Value          []byte         `protobuf:"bytes,3,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *ExecutableResponse) Reset() {
	*x = ExecutableResponse{}
	mi := &file_proxy_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecutableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutableResponse) ProtoMessage() {}

func (x *ExecutableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutableResponse.ProtoReflect.Descriptor instead.
func (*ExecutableResponse) Descriptor() ([]byte, []int) {
	return file_proxy_proto_rawDescGZIP(), []int{14}
}

func (x *ExecutableResponse) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *ExecutableResponse) GetCapabilityType() CapabilityType {
	if x != nil {
		return x.CapabilityType
	}
	return CapabilityType_Unknown
}

func (x *ExecutableResponse) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

var File_proxy_proto protoreflect.FileDescriptor

var file_proxy_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6d,
	0x6f, 0x63, 0x6b, 0x63, 0x61, 0x70, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x5a, 0x0a, 0x0c, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x22,
	0x62, 0x0a, 0x0f, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x6f, 0x63, 0x6b, 0x63,
	0x61, 0x70, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x0c, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0x81, 0x01, 0x0a, 0x1a, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x2d, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x63, 0x6b, 0x63, 0x61, 0x70, 0x2e, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x16, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xdc, 0x02, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x57, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x13, 0x57, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c,
	0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x44, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x44, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x3a, 0x0a, 0x18, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x44, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x18, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x44, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49,
	0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x49, 0x44, 0x12, 0x30, 0x0a, 0x13, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x0d, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x43, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x63, 0x6b, 0x63, 0x61,
	0x70, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x08, 0x63, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x05, 0x0a, 0x03, 0x44, 0x4f,
	0x4e, 0x22, 0xbd, 0x01, 0x0a, 0x0e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x49, 0x44, 0x12, 0x3f, 0x0a, 0x0e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6d,
	0x6f, 0x63, 0x6b, 0x63, 0x61, 0x70, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x03, 0x44, 0x4f, 0x4e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d, 0x6f, 0x63, 0x6b, 0x63, 0x61, 0x70, 0x2e, 0x44,
	0x4f, 0x4e, 0x52, 0x03, 0x44, 0x4f, 0x4e, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x49, 0x73, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x22, 0x5d, 0x0a, 0x17, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x22, 0xd7, 0x01, 0x0a, 0x19, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x3f,
	0x0a, 0x0e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x63, 0x6b, 0x63, 0x61, 0x70,
	0x2e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x51, 0x0a, 0x14, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x6d, 0x6f, 0x63, 0x6b, 0x63, 0x61, 0x70, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x14, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x7e, 0x0a, 0x14, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x57, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x22, 0x8a, 0x01, 0x0a, 0x1d, 0x55,
	0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x57, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x51, 0x0a, 0x14,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x6f, 0x63,
	0x6b, 0x63, 0x61, 0x70, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x14, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x16, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xd1, 0x01, 0x0a, 0x11, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x3f, 0x0a,
	0x0e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x63, 0x6b, 0x63, 0x61, 0x70, 0x2e,
	0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e,
	0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3b,
	0x0a, 0x0f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x63, 0x6b, 0x63, 0x61,
	0x70, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x22, 0x2a, 0x0a, 0x12, 0x43,
	0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x7b, 0x0a, 0x12, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x3f, 0x0a,
	0x0e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x63, 0x6b, 0x63, 0x61, 0x70, 0x2e,
	0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e,
	0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x2a, 0x51, 0x0a, 0x0e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x10, 0x01,
	0x12, 0x0a, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09,
	0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x10, 0x04, 0x32, 0xd0, 0x05, 0x0a, 0x0e, 0x4d, 0x6f, 0x63, 0x6b,
	0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x35, 0x0a, 0x04, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x14, 0x2e, 0x6d, 0x6f, 0x63, 0x6b, 0x63, 0x61, 0x70, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6d, 0x6f, 0x63, 0x6b, 0x63,
	0x61, 0x70, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x45, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x70, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x17, 0x2e, 0x6d, 0x6f, 0x63, 0x6b, 0x63, 0x61, 0x70, 0x2e,
	0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x64,
	0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x2e, 0x6d,
	0x6f, 0x63, 0x6b, 0x63, 0x61, 0x70, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x23, 0x2e, 0x6d, 0x6f,
	0x63, 0x6b, 0x63, 0x61, 0x70, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x6d, 0x6f, 0x63, 0x6b, 0x63, 0x61, 0x70, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x52,
	0x0a, 0x11, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x12, 0x23, 0x2e, 0x6d, 0x6f, 0x63, 0x6b, 0x63, 0x61, 0x70, 0x2e, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x50, 0x0a, 0x0f, 0x48, 0x6f, 0x6f, 0x6b, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x6d, 0x6f, 0x63, 0x6b, 0x63, 0x61, 0x70, 0x2e,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x1a, 0x1a, 0x2e, 0x6d, 0x6f, 0x63, 0x6b, 0x63, 0x61, 0x70, 0x2e, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x00,
	0x28, 0x01, 0x30, 0x01, 0x12, 0x52, 0x0a, 0x12, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x54, 0x6f, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x22, 0x2e, 0x6d, 0x6f, 0x63,
	0x6b, 0x63, 0x61, 0x70, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x16, 0x55, 0x6e, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x12, 0x26, 0x2e, 0x6d, 0x6f, 0x63, 0x6b, 0x63, 0x61, 0x70, 0x2e, 0x55, 0x6e, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x57, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x07, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12,
	0x1a, 0x2e, 0x6d, 0x6f, 0x63, 0x6b, 0x63, 0x61, 0x70, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6d, 0x6f,
	0x63, 0x6b, 0x63, 0x61, 0x70, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3b, 0x5a, 0x39, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x6b, 0x69, 0x74, 0x2f, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f, 0x6d, 0x6f, 0x63, 0x6b, 0x2f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proxy_proto_rawDescOnce sync.Once
	file_proxy_proto_rawDescData = file_proxy_proto_rawDesc
)

func file_proxy_proto_rawDescGZIP() []byte {
	file_proxy_proto_rawDescOnce.Do(func() {
		file_proxy_proto_rawDescData = protoimpl.X.CompressGZIP(file_proxy_proto_rawDescData)
	})
	return file_proxy_proto_rawDescData
}

var file_proxy_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proxy_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_proxy_proto_goTypes = []any{
	(CapabilityType)(0),                   // 0: mockcap.CapabilityType
	(*TriggerEvent)(nil),                  // 1: mockcap.TriggerEvent
	(*TriggerResponse)(nil),               // 2: mockcap.TriggerResponse
	(*TriggerRegistrationRequest)(nil),    // 3: mockcap.TriggerRegistrationRequest
	(*Metadata)(nil),                      // 4: mockcap.Metadata
	(*ListRequest)(nil),                   // 5: mockcap.ListRequest
	(*ListResponse)(nil),                  // 6: mockcap.ListResponse
	(*DON)(nil),                           // 7: mockcap.DON
	(*CapabilityInfo)(nil),                // 8: mockcap.CapabilityInfo
	(*SendTriggerEventRequest)(nil),       // 9: mockcap.SendTriggerEventRequest
	(*RegisterToWorkflowRequest)(nil),     // 10: mockcap.RegisterToWorkflowRequest
	(*RegistrationMetadata)(nil),          // 11: mockcap.RegistrationMetadata
	(*UnregisterFromWorkflowRequest)(nil), // 12: mockcap.UnregisterFromWorkflowRequest
	(*ExecutableRequest)(nil),             // 13: mockcap.ExecutableRequest
	(*CapabilityResponse)(nil),            // 14: mockcap.CapabilityResponse
	(*ExecutableResponse)(nil),            // 15: mockcap.ExecutableResponse
	(*emptypb.Empty)(nil),                 // 16: google.protobuf.Empty
}
var file_proxy_proto_depIdxs = []int32{
	1,  // 0: mockcap.TriggerResponse.TriggerEvent:type_name -> mockcap.TriggerEvent
	4,  // 1: mockcap.TriggerRegistrationRequest.Metadata:type_name -> mockcap.Metadata
	8,  // 2: mockcap.ListResponse.capInfos:type_name -> mockcap.CapabilityInfo
	0,  // 3: mockcap.CapabilityInfo.CapabilityType:type_name -> mockcap.CapabilityType
	7,  // 4: mockcap.CapabilityInfo.DON:type_name -> mockcap.DON
	0,  // 5: mockcap.RegisterToWorkflowRequest.CapabilityType:type_name -> mockcap.CapabilityType
	11, // 6: mockcap.RegisterToWorkflowRequest.RegistrationMetadata:type_name -> mockcap.RegistrationMetadata
	11, // 7: mockcap.UnregisterFromWorkflowRequest.RegistrationMetadata:type_name -> mockcap.RegistrationMetadata
	0,  // 8: mockcap.ExecutableRequest.CapabilityType:type_name -> mockcap.CapabilityType
	4,  // 9: mockcap.ExecutableRequest.RequestMetadata:type_name -> mockcap.Metadata
	0,  // 10: mockcap.ExecutableResponse.CapabilityType:type_name -> mockcap.CapabilityType
	5,  // 11: mockcap.MockCapability.List:input_type -> mockcap.ListRequest
	8,  // 12: mockcap.MockCapability.CreateCapability:input_type -> mockcap.CapabilityInfo
	9,  // 13: mockcap.MockCapability.SendTriggerEvent:input_type -> mockcap.SendTriggerEventRequest
	3,  // 14: mockcap.MockCapability.RegisterTrigger:input_type -> mockcap.TriggerRegistrationRequest
	3,  // 15: mockcap.MockCapability.UnregisterTrigger:input_type -> mockcap.TriggerRegistrationRequest
	15, // 16: mockcap.MockCapability.HookExecutables:input_type -> mockcap.ExecutableResponse
	10, // 17: mockcap.MockCapability.RegisterToWorkflow:input_type -> mockcap.RegisterToWorkflowRequest
	12, // 18: mockcap.MockCapability.UnregisterFromWorkflow:input_type -> mockcap.UnregisterFromWorkflowRequest
	13, // 19: mockcap.MockCapability.Execute:input_type -> mockcap.ExecutableRequest
	6,  // 20: mockcap.MockCapability.List:output_type -> mockcap.ListResponse
	16, // 21: mockcap.MockCapability.CreateCapability:output_type -> google.protobuf.Empty
	16, // 22: mockcap.MockCapability.SendTriggerEvent:output_type -> google.protobuf.Empty
	2,  // 23: mockcap.MockCapability.RegisterTrigger:output_type -> mockcap.TriggerResponse
	16, // 24: mockcap.MockCapability.UnregisterTrigger:output_type -> google.protobuf.Empty
	13, // 25: mockcap.MockCapability.HookExecutables:output_type -> mockcap.ExecutableRequest
	16, // 26: mockcap.MockCapability.RegisterToWorkflow:output_type -> google.protobuf.Empty
	16, // 27: mockcap.MockCapability.UnregisterFromWorkflow:output_type -> google.protobuf.Empty
	14, // 28: mockcap.MockCapability.Execute:output_type -> mockcap.CapabilityResponse
	20, // [20:29] is the sub-list for method output_type
	11, // [11:20] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_proxy_proto_init() }
func file_proxy_proto_init() {
	if File_proxy_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proxy_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proxy_proto_goTypes,
		DependencyIndexes: file_proxy_proto_depIdxs,
		EnumInfos:         file_proxy_proto_enumTypes,
		MessageInfos:      file_proxy_proto_msgTypes,
	}.Build()
	File_proxy_proto = out.File
	file_proxy_proto_rawDesc = nil
	file_proxy_proto_goTypes = nil
	file_proxy_proto_depIdxs = nil
}

