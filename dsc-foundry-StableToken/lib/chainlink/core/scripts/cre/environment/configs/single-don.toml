
[[blockchains]]
  type = "anvil"
  chain_id = "1337"
  docker_cmd_params = ["-b", "5"]

# uncomment to start a second blockchain
#[[blockchains]]
#  type = "anvil"
#  chain_id = "2337"
#  port = "8546"
#  docker_cmd_params = ["-b", "5"]

[jd]
  # change to your version
  image = "job-distributor:0.9.0"

[infra]
  # either "docker" or "crib"
  type = "docker"

#[infra.crib]
#  namespace = "crib-local"
#  folder_location = "/absolute/path/to/crib/deployments/cre"
#  provider = "kind"  # or "aws"

[extra_capabilities]
# uncomment as needed and adjust paths to enable these capabilities and have them copied to containers/pods
# these default paths assume that binaries are placed in core/scripts/cre/environment/ folder
# cron_capability_binary_path = "./cron"
# log_event_trigger_binary_path = "./logtrigger"
# read_contract_capability_binary_path = "./readcontract"

[[nodesets]]
  nodes = 5
  override_mode = "each"
  http_port_range_start = 10100
  name = "workflow"

  [nodesets.db]
    image = "postgres:12.0"
    port = 13000

  [[nodesets.node_specs]]
    [nodesets.node_specs.node]
      docker_ctx = "../../../.."
      docker_file = "plugins/chainlink.Dockerfile"
      # image = "chainlink-tmp:latest"
      # omitted on purpose, if not defined here it will be added by Go code if worker nodes from this DON have cron capability
      # capabilities = ['./cron']
      custom_ports = ["5002:5002"]
      user_config_overrides = """
      [Log]
      Level = 'debug'
      JSONConsole = true

      [Telemetry]
      Enabled = true
      Endpoint = 'host.docker.internal:4317'
      InsecureConnection = true
      TraceSampleRatio = 1
      """

  [[nodesets.node_specs]]
    [nodesets.node_specs.node]
      docker_ctx = "../../../.."
      docker_file = "plugins/chainlink.Dockerfile"
      # image = "chainlink-tmp:latest"
      # omitted on purpose, if not defined here it will be added by Go code if worker nodes from this DON have cron capability
      # capabilities = ['./cron']
      user_config_overrides = """
      [Log]
      Level = 'debug'
      JSONConsole = true

      [Telemetry]
      Enabled = true
      Endpoint = 'host.docker.internal:4317'
      InsecureConnection = true
      TraceSampleRatio = 1
      """

  [[nodesets.node_specs]]
    [nodesets.node_specs.node]
      docker_ctx = "../../../.."
      docker_file = "plugins/chainlink.Dockerfile"
      # image = "chainlink-tmp:latest"
      # omitted on purpose, if not defined here it will be added by Go code if worker nodes from this DON have cron capability
      # capabilities = ['./cron']
      user_config_overrides = """
      [Log]
      Level = 'debug'
      JSONConsole = true

      [Telemetry]
      Enabled = true
      Endpoint = 'host.docker.internal:4317'
      InsecureConnection = true
      TraceSampleRatio = 1
      """

  [[nodesets.node_specs]]
    [nodesets.node_specs.node]
      docker_ctx = "../../../.."
      docker_file = "plugins/chainlink.Dockerfile"
      # image = "chainlink-tmp:latest"
      # omitted on purpose, if not defined here it will be added by Go code if worker nodes from this DON have cron capability
      # capabilities = ['./cron']
      user_config_overrides = """
      [Log]
      Level = 'debug'
      JSONConsole = true

      [Telemetry]
      Enabled = true
      Endpoint = 'host.docker.internal:4317'
      InsecureConnection = true
      TraceSampleRatio = 1
      """

  [[nodesets.node_specs]]
    [nodesets.node_specs.node]
      docker_ctx = "../../../.."
      docker_file = "plugins/chainlink.Dockerfile"
      # image = "chainlink-tmp:latest"
      # omitted on purpose, if not defined here it will be added by Go code if worker nodes from this DON have cron capability
      # capabilities = ['./cron']
      user_config_overrides = """
      [Log]
      Level = 'debug'
      JSONConsole = true

      [Telemetry]
      Enabled = true
      Endpoint = 'host.docker.internal:4317'
      InsecureConnection = true
      TraceSampleRatio = 1
      """